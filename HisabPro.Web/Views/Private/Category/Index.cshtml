@inject HisabPro.Constants.ISharedViewLocalizer _localizer
@using HisabPro.Constants.Resources;
@model HisabPro.Web.ViewModel.GridViewModel<HisabPro.DTO.Response.CategoryRes>
@{
    ViewData["Title"] = @_localizer.Get(ResourceKey.LabelCategories);
    Layout = "~/Views/Shared/_PrivateLayout.cshtml";
}

<div id="tblCategory" style="position:relative">
    @await Html.PartialAsync("~/Views/Shared/_Filter.cshtml", Model.Filter)
    <div class="grid-wrapper">
        <table class="table table-hover sortable">
            <thead>
                <tr>
                    @foreach (var column in Model.Columns)
                    {
                        if (column.Type == HisabPro.Web.ViewModel.Type.Delete || column.Type == HisabPro.Web.ViewModel.Type.Edit)
                        {
                            <th scope="col" style="width:45px"></th>
                        }
                        else
                        {
                            var colAlign = string.Format("text-align:{0};", column.Align == HisabPro.Web.ViewModel.Align.Center ? "center" : column.Align == HisabPro.Web.ViewModel.Align.Right ? "right" : "left");
                            var attWidth = string.Format("width:{0};", column.Width == "Auto" ? "auto; word-wrap: break-word" : column.Width);
                            if (column.IsSortable)
                            {
                                <th scope="col" data-column="@column.Name" data-order="" class="sort" style="@colAlign @attWidth">
                                    @column.Title <span class="sort-icons"></span>
                                </th>
                            }
                            else
                            {
                                <th scope="col" style="@colAlign @attWidth">@column.Title</th>
                            }
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    int totalRecords = 10;
                    @await Html.PartialAsync("_GridBody", Model.Data)
                }
            </tbody>
        </table>
        <div class="grid-footer">
            <div class="grid-page-action">
            </div>
            <div class="grid-page-records text-end">
                @if (totalRecords >= 1)
                {
                    <span>@_localizer.Get(ResourceKey.LabelGridShowing) 1 - @totalRecords @_localizer.Get(ResourceKey.LabelGridShowingOutOf) @totalRecords</span>
                }
                else
                {
                    <span>@_localizer.Get(ResourceKey.LabelNoRecords)</span>
                }
            </div>
        </div>
    </div>
    <div class="grid-loading loading" style="display:none">
        @ResourceKey.LabelLoading
    </div>
</div>
@section Scripts {
    <script>
        $('#tblCategory').gridview({
            controllerName: 'Category',
            titleDelete: '@_localizer.Get(ResourceKey.LabelDeleteCategory)',
            allData: true
        });
    </script>
}
