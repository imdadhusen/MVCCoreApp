@model HisabPro.Web.ViewModel.CategoryModel
@{
    ViewData["Title"] = "Items";
}

<div class="container mt-5">
    <div class="row">
        <div class="col">
            <h2 class="mb-4">Manage categories and subcategories</h2>
        </div>
        <div class="col-3">
            <a href="#" class="float-right mt-20" data-toggle="modal" data-target="#commonModal" data-title="Add Category" data-feature="AddCategory" onclick="openModal(this)">
                <i class="fas fa-plus"></i> Add Category
            </a>
        </div>
    </div>

    <!-- Grid Table -->
    <table id="tblCategory" class="table table-primary">
        <tbody>
            @foreach (var category in Model.AllCategoryList)
            {
                <tr>
                    <td>@category.Name</td>
                    <td align="right">
                        <a href="#" data-target="#commonModal" data-parentid="@category.Id" data-name="@category.Name" data-feature="AddSubcategory" onclick="openModal(this)">
                            <i class="fas fa-plus"></i> Add Subcategory
                        </a>&nbsp;|&nbsp;
                        <a href="#" data-target="#commonModal" data-id="@category.Id" data-name="@category.Name" data-feature="UpdateCategory" onclick="openModal(this)">
                            <i class="fas fa-pencil-alt"></i> Update
                        </a>&nbsp;|&nbsp;
                        <a href="#" data-id="@category.Id" onclick="openConfirm(this)">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="table mb-0 table-light">
                            @foreach (var child in category.ChildCategories.OrderBy(c => c.Name))
                            {
                                <tr>
                                    <td>@child.Name</td>
                                    <td align="right">
                                        <a href="#" data-target="#commonModal" data-parentid="@category.Id" data-id="@child.Id" data-name="@child.Name" data-feature="UpdateSubcategory" onclick="openModal(this)">
                                            <i class="fas fa-pencil-alt"></i> Update
                                        </a>&nbsp;|&nbsp;
                                        <a href="#" data-id="@category.Id" onclick="openConfirm(this)">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@await Html.PartialAsync("_ModalPartial")

@section Scripts {
    <script>
        var isAddRecord = false;
        var button;
        var modalName = '#commonModal';
        @{string dynamicOptions = "";
        foreach (var category in Model.ParentCategoryList)
        {
            dynamicOptions += $"<option value=\"{@category.Id}\">{@category.Name}</option>";
        }
        }
        var contentModal = '<form id="frmCategory"><div id="dvParentCategory" class="form-group"><label for="category-name"> Parent Category </label><select name="parentCategoryId" id="parentCategoryId" class="form-select" aria-label="Parent Category">';
        contentModal += '@Html.Raw(dynamicOptions)' + '</select></div><div class="form-group"><label id="lblCategoryName" asp-for="lblCategoryName"> Sub Category </label><input id="txtCategoryName" asp-for="lblCategoryName" type="text" class="form-control" id="lblCategoryName" name="Name" required><span asp-validation-for="lblCategoryName" class="text-danger"></span></div></form>';

        function openModal(_this) {
            button = $(_this);
            var targetModal = button.data('target');
            var feature = button.data('feature');
            var parentId = button.data('parentid');
            var text = button.data('name');
            var id = button.data('id');

            showModal(targetModal, contentModal, handleSaveCategory, id);

            switch (feature) {
                case 'AddCategory':
                case 'UpdateCategory':
                    $('#dvParentCategory').hide();
                    $('#lblCategoryName').text('Category');
                    $('#txtCategoryName').val(text);
                    break;
                case 'AddSubcategory':
                case 'UpdateSubcategory':
                    $('#dvParentCategory').show();
                    $('#lblCategoryName').text('Sub Category');
                    $('#parentCategoryId').val(parentId);
                    $('#txtCategoryName').val(text);
                    break;
            }
        }
        function handleSaveCategory(data) {
            var frmName = '#frmCategory';
            var parentCatName = '#txtCategoryName';
            var parentCatId = '#parentCategoryId';
            var urlUpdate = '/Category/Save';

            // Reinitialize jQuery Unobtrusive Validation
            $.validator.unobtrusive.parse(frmName);
            var form = $(frmName);
            form.validate();
            if (form.valid()) {
                var req = { Name: $(parentCatName).val() };
                if (data != undefined) {
                    req.Id = data;
                    isAddRecord = false;
                }
                else {
                    isAddRecord = true;
                }

                if ($(parentCatId).is(':visible')) {
                    req.ParentId = $(parentCatId).val();
                }

                ajax.post(urlUpdate, JSON.stringify(req), SaveSuccess);
            } else {
                console.log("Form is invalid!");
            }
        }
        function SaveSuccess(res) {
            // Logic for saving edited item
            if (res.statusCode == 200) {
                showNotification(res.message);
                // Refresh updated value in table
                var updated = res.response.name;
                var tr = button.closest('tr');
                if (isAddRecord) {
                    var id = res.response.id;
                    var parentId = res.response.parentCategoryId;
                    if (parentId) {
                        //Add in child category
                        var nextTr = tr.next('tr');
                        var newtr = $('<tr><td>' + updated + '</td><td align="right"><a href="#" data-target="#commonModal" data-parentid="' + parentId + '" data-id="' + id + '" data-name="' + updated + '" data-feature="UpdateSubcategory" onclick="openModal(this)"><i class="fas fa-pencil-alt"></i> Update</a></td></tr>');
                        // Add new row to the <tbody> to add it at the top
                        nextTr.find('table tbody').prepend(newtr);
                        highlightSaveRow(newtr);
                    }
                    else {
                        //Add in main category
                        tr = $('<tr><td>' + updated + '</td><td align="right"><a href="#" data-target="#commonModal" data-parentid="' + id + '" data-name="' + updated + '" data-feature="AddSubcategory" onclick="openModal(this)"><i class="fas fa-plus"></i> Add Subcategory</a>&nbsp;|&nbsp;<a href="#" data-target="#commonModal" data-id="' + id + '" data-name="' + updated + '" data-feature="UpdateCategory" onclick="openModal(this)"><i class="fas fa-pencil-alt"></i> Update</a></td></tr>');
                        $('#tblCategory tbody').prepend(tr);
                        highlightSaveRow($('#tblCategory tr:first'));
                    }
                }
                else {
                    tr.find('td:first').text(updated);
                    button.data("name", updated);
                    highlightSaveRow(tr);
                }

            }
            $(modalName).modal('hide');
        }

        function openConfirm(_this) {
            var button = $(_this);
            var id = button.data('id');
            showConfirm("Delete Category", "Are you sure you want to delete?", handleYes, id);
        }
        function handleYes(id) {
            alert("Deleting for " + id);
        }
    </script>
}
