@model List<BaseFilterModel>

<div class="grid-filter card mb-1">
    <div class="card-header d-flex justify-content-between align-items-center">
        <!-- Left-aligned Badge near Filters title -->
        <div class="d-flex align-items-center">
            <i class="bi bi-funnel me-2"></i>
            <h5 class="mb-0 p-2">Filters</h5>
            <span class="filterCount badge bg-primary me-2" style="display: none;">0 Selected</span>
        </div>

        <!-- Right-aligned Apply Filter button and toggle button -->
        <div class="d-flex align-items-center">
            <button type="button" class="applyFilters btn btn-primary me-2">
                <i class="bi bi-check-circle"></i> Apply Filter
            </button>
            <button type="button" class="clearFilters btn btn-secondary me-2">
                <i class="bi bi-x-circle"></i> Clear Filter
            </button>
            <button type="button" class="toggleFilters btn btn-sm btn-outline-secondary">
                <i class="bi bi-chevron-down"></i>
            </button>
        </div>
    </div>
    <div class="grid-filter-body card-body">
        <form class="filterForm card-body">
            <div class="row">
                @foreach (var filter in Model)
                {
                    <div class="col-md-4">
                        <div class="form-group mb-3">
                            <label class="form-label">@filter.FieldTitle</label>

                            @if (filter is FilterModel<bool> boolFilter)
                            {
                                <div>
                                    <div class="form-check form-check-inline">
                                        <input type="radio" class="form-check-input" name="@filter.FieldName" data-type="bool" id="yesOption" value="Yes">
                                        <label class="form-check-label" for="yesOption">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input type="radio" class="form-check-input" name="@filter.FieldName" data-type="bool" id="noOption" value="No">
                                        <label class="form-check-label" for="noOption">No</label>
                                    </div>
                                </div>
                            }
                            else if (filter is FilterModel<int> intFilter && intFilter.Items != null)
                            {
                                <div>
                                    <select name="@filter.FieldName" data-child="@filter.ChildFieldName" data-type="int" class="selectpicker" multiple="multiple" data-live-search="true">
                                        @foreach (var item in intFilter.Items)
                                        {
                                            <option data-ref="@item.RefId" value="@item.Id">@item.Name</option>
                                        }
                                    </select>
                                    @if (filter.ChildItems != null && filter.ChildItems.Count >= 1)
                                    {
                                        <script>
                                            var dynamicVarName = "@filter.ChildFieldName"; //ChildCategoryId
                                            //Create dynamic variable to filter children data
                                            window[dynamicVarName] = @Html.Raw(Json.Serialize(@filter.ChildItems));
                                        </script>
                                    }
                                </div>
                            }
                            else if (filter is FilterModel<int> intFilterSelect && intFilterSelect.Items == null)
                            {
                                <div>
                                    <select name="@filter.FieldName" data-type="int" class="selectpicker" multiple="multiple" data-live-search="true">
                                    </select>
                                </div>
                            }
                            else if (filter is FilterModel<string> stringFilter)
                            {
                                <div>
                                    <input type="text" name="@filter.FieldName" data-type="string" class="form-control" />
                                </div>
                            }
                            else if (filter is FilterModel<DateTime> dateFilter)
                            {
                                <div class="row">
                                    <div class="col-md-6">
                                        <input type="date" name="@($"{filter.FieldName}_Start")" data-type="date" class="form-control" />
                                    </div>
                                    <div class="col-md-6">
                                        <input type="date" name="@($"{filter.FieldName}_End")" data-type="date" class="form-control" />
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.selectpicker').selectpicker().on('change', function () {
            var selectedValue = $(this).val();
            var name = $(this).data('child'); // Get the child dropdown name
            if (name && name != "") {
                const numberArray = selectedValue.map(Number);
                var childDrp = `select[name="${name}"]`;
                var $childDropdown = $(childDrp);
                $childDropdown.empty(); // Removes all options from the dropdown
                $childDropdown.selectpicker('destroy'); // Destroys the selectpicker instance
               
                var filteredItems = window[name].filter(item => numberArray.includes(Number(item.refId)));
                filteredItems.forEach(function (item) {
                    $childDropdown.append('<option value="' + item.id + '">' + item.name + '</option>');
                });

                // Refresh the child dropdown UI
                $childDropdown.selectpicker();
            }
        });
    });
</script>