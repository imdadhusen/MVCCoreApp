@model HisabPro.Web.ViewModel.GridViewModel<object>

<table class="table table-hover sortable">
    <thead>
        <tr>
            @foreach (var column in Model.Columns)
            {
                var colAlign = string.Format("text-align:{0};", column.Align == HisabPro.Web.ViewModel.Align.Center ? "center" : column.Align == HisabPro.Web.ViewModel.Align.Right ? "right" : "left");
                var attWidth = string.Format("width:{0};", column.Width == "Auto" ? "auto; word-wrap: break-word;" : column.Width);
                if (column.IsSortable)
                {
                    <th scope="col" data-column="@column.Name" data-order="" class="sort" style="@colAlign @attWidth">
                        @column.Title
                        <span class="sort-icons"></span>
                    </th>
                }
                else
                {
                    <th scope="col" style="@colAlign @attWidth">@column.Title</th>
                }
            }
        </tr>
    </thead>
    <tbody>
        @await Html.PartialAsync("_GridViewBody", Model)
    </tbody>
</table>
<div class="grid-pagination">
    <button class="prev-page" @(Model.PageNumber <= 1 ? "disabled" : "")>Previous</button>
    <span>Page @Model.PageNumber of @((Model.TotalRecords + Model.PageSize - 1) / Model.PageSize)</span>
    <button class="next-page" @(Model.PageNumber * Model.PageSize >= Model.TotalRecords ? "disabled" : "")>Next</button>
</div>
@await Html.PartialAsync("_ModalPartial")
<script src="~/js/gridview.js"></script>