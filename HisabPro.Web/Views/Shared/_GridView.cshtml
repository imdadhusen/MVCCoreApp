@using HisabPro.Constants.Resources;
@model HisabPro.Web.ViewModel.GridViewModel<object>
@await Html.PartialAsync("../Shared/_Filter", Model.Filters)
<div class="grid-wrapper">
    <table class="table table-hover sortable">
        <thead>
            <tr>
                @foreach (var column in Model.Columns)
                {
                    if (column.Type == HisabPro.Web.ViewModel.Type.Delete || column.Type == HisabPro.Web.ViewModel.Type.Edit)
                    {
                        <th scope="col" style="width:45px"></th>
                    }
                    else
                    {
                        var colAlign = string.Format("text-align:{0};", column.Align == HisabPro.Web.ViewModel.Align.Center ? "center" : column.Align == HisabPro.Web.ViewModel.Align.Right ? "right" : "left");
                        var attWidth = string.Format("width:{0};", column.Width == "Auto" ? "auto; word-wrap: break-word" : column.Width);
                        if (column.IsSortable)
                        {
                            <th scope="col" data-column="@column.Name" data-order="" class="sort" style="@colAlign @attWidth">
                                @column.Title <span class="sort-icons"></span>
                            </th>
                        }
                        else
                        {
                            <th scope="col" style="@colAlign @attWidth">@column.Title</th>
                        }
                    }
                }
            </tr>
        </thead>
        <tbody>
            @await Html.PartialAsync("~/Views/Shared/_GridViewBody.cshtml", Model)
        </tbody>
    </table>
    <div class="grid-footer">
        <div class="grid-page-action">
            <button class="prev-page btn btn-primary flex-fill" @(Model.PageNumber <= 1 ? "disabled" : "")>
                <i class="bi bi-arrow-left"></i> @SharedResource.LabelPrevious
            </button>
            @if (@Model.TotalRecords >= 1)
            {
                var totalPages = ((Model.TotalRecords + Model.PageSize - 1) / Model.PageSize);
                <span class="d-flex align-items-center mx-2">@SharedResource.LabelGridPage <input type="number" asp-for="@Model.PageNumber" class="current-page  form-control mx-2" min="1" max="@totalPages" /> @SharedResource.LabelGridPageOf <span class="total-page">@totalPages</span></span>
            }
            else
            {
                <span>@SharedResource.LabelGridNoRecords</span>
            }
            <button class="next-page btn btn-primary flex-fill" @(Model.PageNumber * Model.PageSize >= Model.TotalRecords ? "disabled" : "")>
                @SharedResource.LabelNext <i class="bi bi-arrow-right"></i>
            </button>
        </div>
        <div class="grid-page-records text-end">
            @if (@Model.TotalRecords >= 1)
            {
                var startRecord = (Model.PageNumber - 1) * Model.PageSize + 1;
                var endRecord = Math.Min(startRecord + Model.PageSize - 1, Model.TotalRecords);
                <span>@SharedResource.LabelGridShowing @startRecord - @endRecord @SharedResource.LabelGridShowingOutOf @Model.TotalRecords</span>
            }
            else
            {
                <span>@SharedResource.LabelNoRecords</span>
            }
        </div>
    </div>
    <div class="grid-loading loading" style="display:none">
        @SharedResource.LabelLoading
    </div>
    @await Html.PartialAsync("~/Views/Shared/_ModalPartial.cshtml")
</div>